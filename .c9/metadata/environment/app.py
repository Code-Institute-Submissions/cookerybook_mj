{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nfrom flask import Flask, render_template, redirect, request, url_for\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\n\napp = Flask(__name__)\n\napp.config[\"MONGO_DBNAME\"] = 'mjGoodFood'\napp.config[\"MONGO_URI\"] = os.environ.get('MONGO_URI', 'mongodb://localhost')\n\nmongo = PyMongo(app)\n\n@app.route('/')\n\n@app.route('/get_recipes')\ndef get_recipes():\n    return render_template(\"recipes.html\",\n    recipe=mongo.db.recipes.find())\n    \n    \n@app.route('/add_recipe')\ndef add_recipe():\n    return render_template('addrecipes.html',\n    categories=mongo.db.categories.find())\n    \n    \n@app.route('/insert_recipe', methods=['POST'])\ndef insert_recipe():\n    recipes = mongo.db.recipes\n    recipes.insert_one(request.form.to_dict())\n    return redirect(url_for('get_recipes'))\n    \n    \n@app.route('/edit_recipe/<recipe_id>')\ndef edit_recipe(recipe_id):\n    the_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})\n    all_categories = mongo.db.categories.find()\n    return render_template('editrecipe.html', recipe=the_recipe, catergories=all_categories)\n    \n    \n@app.route('/update_recipe/<recipe_id>', methods=[\"POST\"])\ndef update_recipe(recipe_id):\n    recipes = mongo.db.recipes\n    recipes.update( {'_id': ObjectId(recipe_id)},\n    {\n        'recipe_name':request.form.get('recipe.name'),\n        'category_name':request.form.get('category_name'),\n        'recipe_description':request.form.get('recipe_description'),\n        'recipe_ingredients':request.form.get('recipe_ingredients'),\n        'recipe_method':request.form.get('recipe_method')\n    })\n    return redirect(url_for('get_recipes'))\n\n    \n@app.route('/delete.recipe/<recipe_id>')\ndef delete_recipe(recipe_id):\n    mongo.db.recipes.remove({'_id':ObjectId(recipe_id)})\n    return redirect(url_for('get_recipes'))\n    \n\n@app.route('/get_categories')\ndef get_categories():\n    return render_template('categories.html',\n    categories=mongo.db.categories.find())\n    \n    \n@app.route('/delete_category/<category_id>')\ndef delete_category(category_id):\n    mongo.db.categories.remove({'_id': ObjectId(category_id)})\n    return redirect(url_for('get_categories'))\n    \n    \n@app.route('/edit_category/<category_id>')\ndef edit_category(category_id):\n    return render_template('editcategory.html',\n    category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))\n    \n    \n@app.route('/update_category/<category_id>', methods=[\"POST\"])\ndef update_category(category_id):\n    mongo.db.categories.update({'_id': ObjectId(category_id)},\n    {'category_name': request.form.get['category_name']})\n    return redirect(url_for('get_categories'))\n    \n    \n@app.route('/insert_category', methods=[\"POST\"])\ndef insert_category():\n    categories = mongo.db.categories\n    category_doc = {'category_name': request.form.get('category_name')}\n    mongo.db.categories.insert_one(category_doc)\n    return redirect(url_for('get_categories'))\n    \n    \n@app.route('/add_category')\ndef add_category():\n    return render_template('addcategory.html')\n\nif __name__ == '__main__':\n    app.run(host=os.environ.get('IP'),\n            port=int(os.environ.get('PORT')),\n            debug=True)","undoManager":{"mark":13,"position":16,"stack":[[{"start":{"row":0,"column":0},"end":{"row":14,"column":23},"action":"insert","lines":["import os","from flask import Flask","","app = Flask(__name__)","","","@app.route('/')","def hello():","    return 'Hello World ...again'","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":14,"column":23},"action":"remove","lines":["import os","from flask import Flask","","app = Flask(__name__)","","","@app.route('/')","def hello():","    return 'Hello World ...again'","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":98,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)","","app.config[\"MONGO_DBNAME\"] = 'mjGoodFood'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_recipes')","def get_recipes():","    return render_template('recipes.html',","    recipes=mongo.db.recipes.find())","    ","    ","@app.route('/add_recipe')","def add_recipe():","    return render_template('addrecipes.html',","    categories=mongo.db.categories.find())","    ","    ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    recipes = mongo.db.recipes","    recipes.insert_one(request.form.to_dict())","    return redirect(url_for('get_recipes'))","    ","    ","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    the_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    all_categories = mongo.db.categories.find()","    return render_template('editrecipe.html', recipe=the_recipe, catergories=all_categories)","    ","    ","@app.route('/update_recipe/<recipe_id>', methods=[\"POST\"])","def update_recipe(recipe_id):","    recipes = mongo.db.recipes","    recipes.update( {'_id': ObjectId(recipe_id)},","    {","        'recipe_name':request.form.get('recipe.name'),","        'category_name':request.form.get('category_name'),","        'recipe_description':request.form.get('recipe_description'),","        'recipe_ingredients':request.form.get('recipe_ingredients'),","        'recipe_method':request.form.get('recipe_method')","    })","    return redirect(url_for('get_recipes'))","","    ","@app.route('/delete.recipe/<recipe_id>')","def delete_recipe(recipe_id):","    mongo.db.recipes.remove({'_id':ObjectId(recipe_id)})","    return redirect(url_for('get_recipes'))","    ","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","    categories=mongo.db.categories.find())","    ","    ","@app.route('/delete_category/<category_id>')","def delete_category(category_id):","    mongo.db.categories.remove({'_id': ObjectId(category_id)})","    return redirect(url_for('get_categories'))","    ","    ","@app.route('/edit_category/<category_id>')","def edit_category(category_id):","    return render_template('editcategory.html',","    category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))","    ","    ","@app.route('/update_category/<category_id>', methods=[\"POST\"])","def update_category(category_id):","    mongo.db.categories.update({'_id': ObjectId(category_id)},","    {'category_name': request.form.get['category_name']})","    return redirect(url_for('get_categories'))","    ","    ","@app.route('/insert_category', methods=[\"POST\"])","def insert_category():","    categories = mongo.db.categories","    category_doc = {'category_name': request.form.get('category_name')}","    mongo.db.categories.insert_one(category_doc)","    return redirect(url_for('get_categories'))","    ","    ","@app.route('/add_category')","def add_category():","    return render_template('addcategory.html')","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":3}],[{"start":{"row":8,"column":34},"end":{"row":8,"column":35},"action":"remove","lines":["v"],"id":4},{"start":{"row":8,"column":33},"end":{"row":8,"column":34},"action":"remove","lines":["n"]},{"start":{"row":8,"column":32},"end":{"row":8,"column":33},"action":"remove","lines":["e"]},{"start":{"row":8,"column":31},"end":{"row":8,"column":32},"action":"remove","lines":["t"]},{"start":{"row":8,"column":30},"end":{"row":8,"column":31},"action":"remove","lines":["e"]},{"start":{"row":8,"column":29},"end":{"row":8,"column":30},"action":"remove","lines":["g"]}],[{"start":{"row":8,"column":29},"end":{"row":8,"column":30},"action":"insert","lines":["e"],"id":5},{"start":{"row":8,"column":30},"end":{"row":8,"column":31},"action":"insert","lines":["n"]},{"start":{"row":8,"column":31},"end":{"row":8,"column":32},"action":"insert","lines":["v"]},{"start":{"row":8,"column":32},"end":{"row":8,"column":33},"action":"insert","lines":["i"]},{"start":{"row":8,"column":33},"end":{"row":8,"column":34},"action":"insert","lines":["r"]}],[{"start":{"row":8,"column":29},"end":{"row":8,"column":34},"action":"remove","lines":["envir"],"id":6},{"start":{"row":8,"column":29},"end":{"row":8,"column":36},"action":"insert","lines":["environ"]}],[{"start":{"row":8,"column":36},"end":{"row":8,"column":37},"action":"insert","lines":["."],"id":7},{"start":{"row":8,"column":37},"end":{"row":8,"column":38},"action":"insert","lines":["g"]},{"start":{"row":8,"column":38},"end":{"row":8,"column":39},"action":"insert","lines":["e"]},{"start":{"row":8,"column":39},"end":{"row":8,"column":40},"action":"insert","lines":["t"]}],[{"start":{"row":8,"column":76},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":12,"column":15},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":16,"column":40},"end":{"row":16,"column":41},"action":"remove","lines":["'"],"id":10}],[{"start":{"row":16,"column":40},"end":{"row":16,"column":41},"action":"insert","lines":["\""],"id":11}],[{"start":{"row":16,"column":27},"end":{"row":16,"column":28},"action":"remove","lines":["'"],"id":12}],[{"start":{"row":16,"column":27},"end":{"row":16,"column":28},"action":"insert","lines":["\""],"id":13}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"remove","lines":["s"],"id":14}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["s"],"id":15}],[{"start":{"row":17,"column":11},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":16},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "],"id":17},{"start":{"row":17,"column":11},"end":{"row":18,"column":0},"action":"remove","lines":["",""]},{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"remove","lines":["s"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":17,"column":10},"end":{"row":17,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1578741200950}